/************** TODO NEXT *************/

Cuda c

  - cSharp, modify: Convert to float precition
  - c = make as cuda code.

  NOTES:
  - 124 registers per thread.
  - Vars really needed:
    neqn;
    end_year
    relerr;
    abserr;
    policy;

  //HOST:
  //construct (decide neqn)

  //Set public vars.
  //(Must be viewable from device)

  //Start kernel
  //(estimate);

Finde ud af hvordan man timer forskellige customers

Lave unittests i csharp
  - Få testværdier til dy og GM.

/************** QUESTIONS *************/
NICOLAI / CHRISTIAN:

Skal alle variable i device gå igennem kernel fncitonen?

Er det kun y[0] som er interessant? skal y[0..neqn] returners?
kun y[0] er interessant.

VEJLEDER:
y_diff (gammel yp) er previous_d_diff. Er det en fejl? Stemmer ikke overens.
med udregninger.
stepsize scales ned ved years afslutninger. Er det et problem?

/************** HACK SETUP **************/
Iterm2 mouse copy fix
Iterm2 cmd hotkey remove. 
lola command show max of 16 lines..
vim undo last jump
Iterm2 copy paste easier

/************** WORKFLOW ***************/
Workflow:
Start of the day:
  Check todo file.
  
Regularly:
  git status
  git commit -am DESCRIPTION

End of the day:
  Write down the next moves, and status in the todo file.

/************** GIT COMMANDS ***********/
Undo working changes:
  git stash save --keep-index

Checkout and create new branch
  git checkout -b NAME

Merge:
  git merge TO GET

Git add all:
  git add .

/************ FOR THE REPORT ***********/

     * y er startværdi(erne)
     * y_diff er k1, og f1..5 er det samme som k2..5, dog uden at have ganget med stepsize
     * Altså:
     * k1 = y_diff * stepsize
     * k2..5 = f2..5 * stepsize
     *
     * Da funktionerne skal bruge k2..5, ganger vi med stepsize. (i praksis lcd_stepsize)
     * lcd_stepsize is the lowest diffential of stepsize. Det er praktisk at man ikke skal gange med så store tal.
