/************** TODO NEXT *************/

  NOTES:
  - 124 registers per thread.

Finde ud af hvordan man timer forskellige customers

Lave unittests i csharp
  - Få testværdier til dy og GM.

/************* Møde ******************/

  rel og abs error vigtigt.

  RAPPORT: Arbejdsprocess: Cuda, process, hvorfor fejl?
  float.
  Vigtige pointer.

  Processafsnit.

/************** QUESTIONS *************/
asdfl
VEJLEDER:
y_diff (gammel yp) er previous_d_diff. Er det en fejl? Stemmer ikke overens.
med udregninger.
stepsize scales ned ved years afslutninger. Er det et problem?

  Et produktskunder.

  Random kunder - når man vil finde ud af om resultat er rigtigt: Og
  tidstagning: Seeds.


  Benchmarking på de 6 kunder:

Hypoteser:
  - Det vigtigt at søge for at ting der ligger sammen. Sortering?
  - Sorter efter sammme alder inden for hvert produkt.
  - KLS: memory access. GLOBAL MEMORY!


float problemer, presision.
What is next
threaddivergence og modeling
What is different customers, how many are needed etc.

/************** HACK SETUP **************/
Iterm2 mouse copy fix
Iterm2 cmd hotkey remove. 

/*********** FLOAT CONVERTION **********/

:%s/\.\d\+/\="".submatch(0)."f"/gc

double -> float
Math.Pow -> (float) Math.Pow
Math.Log -> (float) Math.Log


pow -> powf
fabs -> fabsf

/************** WORKFLOW ***************/
Workflow:
Start of the day:
  Check todo file.
  
Regularly:
  git status
  git commit -am DESCRIPTION

End of the day:
  Write down the next moves, and status in the todo file.

/************** GIT COMMANDS ***********/
Undo working changes:
  git stash save --keep-index

Checkout and create new branch
  git checkout -b NAME

Merge:
  git merge TO GET

Git add all:
  git add .

/************ FOR THE REPORT ***********/

     * y er startværdi(erne)
     * y_diff er k1, og f1..5 er det samme som k2..5, dog uden at have ganget med stepsize
     * Altså:
     * k1 = y_diff * stepsize
     * k2..5 = f2..5 * stepsize
     *
     * Da funktionerne skal bruge k2..5, ganger vi med stepsize. (i praksis lcd_stepsize)
     * lcd_stepsize is the lowest diffential of stepsize. Det er praktisk at man ikke skal gange med så store tal.
